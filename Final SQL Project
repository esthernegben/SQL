I performed analytics on a dataset called chinook,  which represents a digital media store and includes tables for 
artists, albums, media tracks, invoices, and customers.


-- distinct billing countries 
SELECT 
    DISTINCT BillingCountry
FROM chinook.invoices;

-- total invoice amount per customerID and Country
SELECT  
    round(SUM(UnitPrice*Quantity),3) AS total_spent, Country
FROM chinook.invoice_items AS i 
JOIN invoices as inv ON i.InvoiceId = inv.InvoiceId
JOIN customers AS c ON inv.CustomerId = c.CustomerId
GROUP BY Country
ORDER BY total_spent desc;

-- full name, customer ID and counry of non-UK customers
SELECT 
    (FirstName || ' ' || LastName) as Full_Name, CustomerID, Country
FROM chinook.customers
WHERE country != 'United Kingdom';

-- invoices of Brazillian customers, displaying full name, invoice ID, invoice date and billing country 
SELECT
    (FirstName || ' ' || LastName) as Full_Name, InvoiceID, InvoiceDate, BillingCountry
FROM chinook.invoices as i
JOIN chinook.customers as c on c.CustomerId = i.CustomerId
WHERE Country = 'Brazil';

-- all information on employees that are sales agents 
SELECT
  *
FROM chinook.employees
WHERE Title LIKE '%Sales Support Agent%';

-- full name of sales agents with associated invoice IDs
SELECT
    (e.FirstName || ' ' || e.LastName) as Full_Name, InvoiceID
FROM chinook.employees AS e
JOIN chinook.customers AS c ON e.EmployeeId = c.SupportRepId
JOIN chinook.invoices AS i ON i.CustomerId - c.CustomerId
GROUP BY Full_Name;

--Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT  
    round(SUM(UnitPrice*Quantity),2) AS invoice_total, 
    (c.FirstName || ' ' || c.LastName) AS Customer_Name, 
    (e.FirstName || ' ' || e.LastName) AS Sales_Rep,
    InvoiceID, 
    c.Country
FROM chinook.invoice_items AS i 
JOIN chinook.invoices as inv ON i.InvoiceId = inv.InvoiceId
JOIN chinook.customers AS c ON inv.CustomerId = c.CustomerId
JOIN chinook.employees AS e ON e.EmployeeId = c.SupportRepId
GROUP BY Customer_Name, Sales_Rep;

-- total invoices in 2009
SELECT COUNT(InvoiceID)
FROM chinook.invoices 
WHERE InvoiceDate LIKE '%2009%';

-- total sales for 2009
SELECT 
    round(SUM(UnitPrice*Quantity),2) AS invoice_total
FROM chinook.invoices AS inv
JOIN chinook.invoice_items AS i 
WHERE InvoiceDate LIKE '%2009%';

--purchase track name, invoice id, artisit name
SELECT
    InvoiceID, 
    t.Name AS Track,
    a.Name AS Artist
FROM chinook.invoice_items as i 
JOIN chinook.tracks as t ON t.TrackId = i.TrackId
JOIN chinook.albums as alb ON alb.Albumid = t.Albumid
JOIN chinook.artists as a ON a.Artistid = alb.Artistid;

-- all the Tracks with Album name, Media type, and Genre
SELECT 
    t.Name AS Track,
    a.Title AS Album,
    m.Name AS Media_Type,
    g.Name AS Genre
FROM chinook.tracks as t
JOIN chinook.albums as a ON t.AlbumId = a.AlbumId
JOIN chinook.media_types as m ON m.MediaTypeId = t.MediaTypeId
JOIN chinook.genres as g ON g.Genreid = t.Genreid;

-- total sales made by each sales agent
SELECT
    ROUND(SUM(UnitPrice*Quantity)) as total_sales,
    (e.FirstName || ' ' || e.LastName) AS Sales_Rep
FROM chinook.invoice_items as i
JOIN chinook.invoices as inv ON i.InvoiceId = inv.InvoiceId
JOIN chinook.customers as c ON c.CustomerId = inv.CustomerId
JOIN chinook.employees as e ON e.EmployeeId = C.SupportRepId
GROUP BY Sales_Rep
Order by total_sales;

-- total sales made by top performing sales agent in 2009.
SELECT
    ROUND(SUM(UnitPrice*Quantity)) as total_sales,
    (e.FirstName || ' ' || e.LastName) AS Sales_Rep
FROM chinook.invoice_items as i
JOIN chinook.invoices as inv ON i.InvoiceId = inv.InvoiceId
JOIN chinook.customers as c ON c.CustomerId = inv.CustomerId
JOIN chinook.employees as e ON e.EmployeeId = C.SupportRepId
WHERE InvoiceDate LIKE '%2009%'
GROUP BY Sales_Rep
ORDER BY total_sales desc
LIMIT 1;

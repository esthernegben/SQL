#In this SQL, I'm querying a database containing 6 tables to quantify statistics about customer and order data. 

#1. How many orders were placed in January? 
SELECT COUNT(*)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#2. How many of those orders were for an iPhone? 
SELECT COUNT(*)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderID) = 6 AND orderID <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT acctnum
FROM BIT_DB.customers c
INNER JOIN BIT_DB.FebSales feb ON c.order_id = feb.orderID
WHERE Product = 'iPhone'
AND length(orderID) = 6 AND orderID <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE  price in (SELECT MIN(price) FROM BIT_DB.JanSales)
#OR 
SELECT distinct product, price FROM BIT_DB.JanSales 
ORDER BY price ASC LIMIT 1

#5. What is the total revenue for each product sold in January?
SELECT Product, ROUND(SUM(quantity*price), 2) as total_revenue
FROM BIT_DB.JanSales
GROUP BY Product;


#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT
    Product,
    SUM(quantity) AS total_sold,
    SUM(price)*SUM(quantity) AS total_revenue
FROM BIT_DB.FebSales feb
WHERE location LIKE '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;


#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
select 
count(distinct cust.acctnum), 
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6 
AND orderid <> 'Order ID'

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT
    Product,
    SUM(quantity),
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;

